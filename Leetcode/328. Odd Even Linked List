/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        
        if ( head == NULL || head -> next == NULL ) return head ;
        
        ListNode * odd = head ;
        ListNode * even = head -> next ;
        ListNode * even_ptr = even ;
    
        
        while ( odd -> next != NULL && even_ptr -> next != NULL ) {
            odd -> next = even_ptr -> next ;
            even_ptr -> next = odd -> next -> next ;
            odd = odd -> next ;
            even_ptr = even_ptr -> next ; 
        } // while()
        
        odd -> next = even ;
        return head ;
        
    }
};
